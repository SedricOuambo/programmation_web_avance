[
    {
        "title": "FormNonControlle1",
        "content": "'use client'\nimport styles from './FormNonControlle.module.css';\nimport { useRef } from 'react';\nexport default function FormNonControlle() {\n    const nomRef = useRef(null); // Créer une référence pour le champ de nom\n    const courrielRef = useRef(null); // Créer une référence pour le champ courriel\n    const handleSubmit = (event) => {\n        event.preventDefault(); // Empêche la soumission par défaut du formulaire\n        const nom = nomRef.current.value; // Obtenir la valeur du champ de nom\n        const courriel = courrielRef.current.value; // Obtenir la valeur du champ courriel\n        console.log(`Nom: ${nom}, Courriel: ${courriel}`);\n    };\n    return <>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Nom:</label>\n                <input type=\"text\" ref={nomRef} /> {/* Champ de texte avec une référence */}\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" ref={courrielRef} /> {/* Champ de texte avec une référence */}\n            </div>\n            <button type=\"submit\">Envoyer</button>\n        </form>\n    </>;\n}\n"
    },
    {
        "title": "contact",
        "content": "import FormNonControlle from \"./FormNonControlle\"\nexport default function Contact() {\n    return <>\n        <div>\n            Formulaire non contrôlé\n            <FormNonControlle/>\n        </div>\n    </>;\n}\n"
    },
    {
        "title": "FormNonControle2",
        "content": "'use client'\nimport styles from './Form.module.css';\nimport { useRef, useState } from 'react';\nexport default function FormNonControlle() {\n    const nomRef = useRef(null); // Créer une référence pour le champ de nom\n    const courrielRef = useRef(null); // Créer une référence pour le champ courriel\n    const [erreurNom, setErreurNom] = useState('');\n    const [erreurCourriel, setErreurCourriel] = useState('');\n    const [envoiReussi, setEnvoiReussi] = useState(false);\n    const courrielRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Expression régulière pour valider le courriel\n    const handleSubmit = (event) => {\n        event.preventDefault(); // Empêche la soumission par défaut du formulaire\n        const nom = nomRef.current.value; // Obtenir la valeur du champ de nom\n        const courriel = courrielRef.current.value; // Obtenir la valeur du champ de courriel\n        let erreur = false;\n        if (!nom) {\n            setErreurNom(\"Ce champ doit être rempli\");\n            erreur = true;\n        } else {\n            setErreurNom('');\n        }\n        if (!courriel || !courrielRegex.test(courriel)) {\n            setErreurCourriel(\"Ce courriel est invalide\");\n            erreur = true;\n        } else {\n            setErreurCourriel('');\n        }\n        if (erreur) {\n            setEnvoiReussi(false);\n            return;\n        }\n        setEnvoiReussi(true);\n    };\n    return <>\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <div>\n                <label>Nom:\n                    <input type=\"text\" ref={nomRef} /> {/* Champ de texte avec une référence */}\n                    {erreurNom &&\n                        <div className={styles.erreur}>{erreurNom}</div>\n                    }\n                </label>\n            </div>\n            <div>\n                <label>Email:\n                    <input type=\"email\" ref={courrielRef} /> {/* Champ de texte avec une référence */}\n                    {erreurCourriel &&\n                        <div className={styles.erreur}>{erreurCourriel}</div>\n                    }\n                </label>\n            </div>\n            <button type=\"submit\">Envoyer</button>\n            {envoiReussi &&\n                <div className={styles.result}>\n                    Informations envoyées avec succès. Nom = {nomRef.current.value} et Courriel = {courrielRef.current.value}\n                </div>\n            }\n        </form>\n    </>;\n}\n"
    },
    {
        "title": "form_css",
        "content": ".form {\n    max-width: 20rem;\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n.form label {\n    display: flex;\n    flex-direction: column;\n}\n.result{\n    color: green;\n}\n.erreur {\n    color: #a00;\n}\n"
    },
    {
        "title": "FormControlle",
        "content": "'use client'\nimport styles from './Form.module.css';\nimport { useState } from 'react';\nexport default function FormControlle() {\n    const [nom, setNom] = useState(''); // variable pour le champ de nom\n    const [courriel, setCourrel] = useState(''); // variable  pour le champ courriel\n    const handleNom = (event) => setNom(event.target.value); //Pour modifier le nom\n    const handleCourriel = (event) => setCourrel(event.target.value); //pour modifier le courriel\n    const handleSubmit = (event) => {\n        event.preventDefault(); // Empêche la soumission par défaut du formulaire\n        console.log(`Nom: ${nom}, Courriel: ${courriel}`); // Affichage du nom et courriel\n    };\n    return <>\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <div>\n                <label>Nom:</label>\n                <input\n                    type=\"text\"\n                    name='nom'\n                    value={nom}\n                    onChange={handleNom}\n                />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input\n                    type=\"email\"\n                    name='courriel'\n                    value={courriel}\n                    onChange={handleCourriel}\n                />\n            </div>\n            <button type=\"submit\">Envoyer</button>\n        </form>\n    </>;\n}\n"
    },
    {
        "title": "FormHook",
        "content": "'use client'\nimport styles from './Form.module.css'\nimport { useForm } from 'react-hook-form'\nexport default function FormHook() {\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors }\n    } = useForm({\n        defaultValues: {\n            nom: '',\n            courriel: ''\n        }\n    });\n    const nom = watch('nom');\n    return <>\n        <form className={styles.form}\n            onSubmit={handleSubmit()}>\n            <label>\n                Nom:\n                <input\n                    type=\"text\"\n                    {...register(\"nom\",\n                        {\n                            required: 'Champ obligatoire',\n                            minLength: { value: 4, message: \"min 4 caractères\" }\n                        })\n                    }\n                    placeholder='votre nom' />\n                <div className={styles.erreur}>{errors.nom?.message}</div>\n            </label>\n            <div>Nom : {nom}</div>\n            <label>\n                Courriel:\n                <input\n                    type=\"email\"\n                    {...register(\"courriel\",\n                        {\n                            required: 'Champ obligatoire',\n                            pattern: {\n                                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                                message: 'Courriel non valide'\n                            }\n                        })\n                    }\n                    placeholder='votre courriel'\n                />\n                <div className={styles.erreur}>{errors.courriel?.message}</div>\n            </label>\n            <button type=\"submit\">Envoyer</button>\n        </form>\n    </>\n}\n"
    },
    {
        "title": "PostRoute",
        "content": "export default (request, response) => {\n        if (request.method === 'POST') { // Assurer que la méthode est POST\n            const { nom } = request.body; // Récupérer les données du corps de la requête\n            response.status(200).json({ message: `Message bien reçu, ${nom}!` }); //Confirmation\n        } else {\n            response.status(405).end(); // Méthode non autorisée\n        }\n    };\n"
    }
]